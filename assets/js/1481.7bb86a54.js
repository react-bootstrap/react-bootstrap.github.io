"use strict";(self.webpackChunkreact_bootstrap_website=self.webpackChunkreact_bootstrap_website||[]).push([[1481],{1481:e=>{e.exports=JSON.parse('{"description":"","props":{"as":{"required":false,"tsType":{"name":"union","raw":"React.ElementType | undefined","elements":[{"name":"ReactElementType","raw":"React.ElementType"},{"name":"undefined"}]},"description":"Element used to render the component.","defaultValue":{"value":"\'input\'","computed":false},"doclets":{}},"bsPrefix":{"required":false,"tsType":{"name":"union","raw":"string | undefined","elements":[{"name":"string"},{"name":"undefined"}]},"description":"","doclets":{"default":"\'form-control\'"}},"htmlSize":{"required":false,"tsType":{"name":"union","raw":"number | undefined","elements":[{"name":"number"},{"name":"undefined"}]},"description":"The size attribute of the underlying HTML element.\\nSpecifies the visible width in characters if `as` is `\'input\'`.","doclets":{}},"size":{"required":false,"tsType":{"name":"union","raw":"\'sm\' | \'lg\' | undefined","elements":[{"name":"literal","value":"\'sm\'"},{"name":"literal","value":"\'lg\'"},{"name":"undefined"}]},"description":"Input size variants","doclets":{}},"plaintext":{"required":false,"tsType":{"name":"union","raw":"boolean | undefined","elements":[{"name":"boolean"},{"name":"undefined"}]},"description":"Render the input as plain text. Generally used along side `readOnly`.","doclets":{}},"readOnly":{"required":false,"tsType":{"name":"union","raw":"boolean | undefined","elements":[{"name":"boolean"},{"name":"undefined"}]},"description":"Make the control readonly","doclets":{}},"disabled":{"required":false,"tsType":{"name":"union","raw":"boolean | undefined","elements":[{"name":"boolean"},{"name":"undefined"}]},"description":"Make the control disabled","doclets":{}},"value":{"required":false,"tsType":{"name":"union","raw":"string | string[] | number | undefined","elements":[{"name":"string"},{"name":"Array","elements":[{"name":"string"}],"raw":"string[]"},{"name":"number"},{"name":"undefined"}]},"description":"The `value` attribute of underlying input","doclets":{"controllable":"onChange"}},"onChange":{"required":false,"tsType":{"name":"union","raw":"React.ChangeEventHandler<FormControlElement> | undefined","elements":[{"name":"ReactChangeEventHandler","raw":"React.ChangeEventHandler<FormControlElement>","elements":[{"name":"union","raw":"HTMLInputElement | HTMLTextAreaElement","elements":[{"name":"HTMLInputElement"},{"name":"HTMLTextAreaElement"}]}]},{"name":"undefined"}]},"description":"A callback fired when the `value` prop changes","doclets":{}},"type":{"required":false,"tsType":{"name":"union","raw":"string | undefined","elements":[{"name":"string"},{"name":"undefined"}]},"description":"The HTML input `type`, which is only relevant if `as` is `\'input\'` (the default).","doclets":{}},"id":{"required":false,"tsType":{"name":"union","raw":"string | undefined","elements":[{"name":"string"},{"name":"undefined"}]},"description":"Uses `controlId` from `<FormGroup>` if not explicitly specified.","doclets":{}},"isValid":{"required":false,"tsType":{"name":"union","raw":"boolean | undefined","elements":[{"name":"boolean"},{"name":"undefined"}]},"description":"Add \\"valid\\" validation styles to the control","defaultValue":{"value":"false","computed":false},"doclets":{}},"isInvalid":{"required":false,"tsType":{"name":"union","raw":"boolean | undefined","elements":[{"name":"boolean"},{"name":"undefined"}]},"description":"Add \\"invalid\\" validation styles to the control and accompanying label","defaultValue":{"value":"false","computed":false},"doclets":{}}}}')}}]);