"use strict";(self.webpackChunkreact_bootstrap_website=self.webpackChunkreact_bootstrap_website||[]).push([[569],{64860:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>m,default:()=>k,frontMatter:()=>p,metadata:()=>u,toc:()=>v});var a=n(85893),o=n(11151);const r='import Button from \'react-bootstrap/Button\';\nimport Stack from \'react-bootstrap/Stack\';\n\nfunction ButtonsExample() {\n  return (\n    <Stack gap={2} className="col-md-5 mx-auto">\n      <Button variant="secondary">Save changes</Button>\n      <Button variant="outline-secondary">Cancel</Button>\n    </Stack>\n  );\n}\n\nexport default ButtonsExample;\n',i='import Button from \'react-bootstrap/Button\';\nimport Form from \'react-bootstrap/Form\';\nimport Stack from \'react-bootstrap/Stack\';\n\nfunction FormExample() {\n  return (\n    <Stack direction="horizontal" gap={3}>\n      <Form.Control className="me-auto" placeholder="Add your item here..." />\n      <Button variant="secondary">Submit</Button>\n      <div className="vr" />\n      <Button variant="outline-danger">Reset</Button>\n    </Stack>\n  );\n}\n\nexport default FormExample;\n',s='import Stack from \'react-bootstrap/Stack\';\n\nfunction HorizontalExample() {\n  return (\n    <Stack direction="horizontal" gap={3}>\n      <div className="p-2">First item</div>\n      <div className="p-2">Second item</div>\n      <div className="p-2">Third item</div>\n    </Stack>\n  );\n}\n\nexport default HorizontalExample;\n',l='import Stack from \'react-bootstrap/Stack\';\n\nfunction HorizontalMarginStartExample() {\n  return (\n    <Stack direction="horizontal" gap={3}>\n      <div className="p-2">First item</div>\n      <div className="p-2 ms-auto">Second item</div>\n      <div className="p-2">Third item</div>\n    </Stack>\n  );\n}\n\nexport default HorizontalMarginStartExample;\n',c='import Stack from \'react-bootstrap/Stack\';\n\nfunction HorizontalVerticalRulesExample() {\n  return (\n    <Stack direction="horizontal" gap={3}>\n      <div className="p-2">First item</div>\n      <div className="p-2 ms-auto">Second item</div>\n      <div className="vr" />\n      <div className="p-2">Third item</div>\n    </Stack>\n  );\n}\n\nexport default HorizontalVerticalRulesExample;\n',d='import Stack from \'react-bootstrap/Stack\';\n\nfunction VerticalExample() {\n  return (\n    <Stack gap={3}>\n      <div className="p-2">First item</div>\n      <div className="p-2">Second item</div>\n      <div className="p-2">Third item</div>\n    </Stack>\n  );\n}\n\nexport default VerticalExample;\n',p={title:"Stacks",description:"Shorthand helpers that build on top of our flexbox utilities to make component layout faster and easier than ever."},m=void 0,u={id:"layout/stack",title:"Stacks",description:"Shorthand helpers that build on top of our flexbox utilities to make component layout faster and easier than ever.",source:"@site/docs/layout/stack.mdx",sourceDirName:"layout",slug:"/layout/stack",permalink:"/docs/layout/stack",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Stacks",description:"Shorthand helpers that build on top of our flexbox utilities to make component layout faster and easier than ever."},sidebar:"sidebar",previous:{title:"Grid",permalink:"/docs/layout/grid"},next:{title:"Overview",permalink:"/docs/forms/overview"}},h={},v=[{value:"Vertical",id:"vertical",level:2},{value:"Horizontal",id:"horizontal",level:2},{value:"Examples",id:"examples",level:2},{value:"API",id:"api",level:2},{value:"Stack",id:"stack",level:3}];function x(e){const t={code:"code",h2:"h2",h3:"h3",p:"p",...(0,o.a)(),...e.components},{CodeBlock:n,PropsTable:p}=t;return n||f("CodeBlock",!0),p||f("PropsTable",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h2,{id:"vertical",children:"Vertical"}),"\n",(0,a.jsxs)(t.p,{children:["Stacks are vertical by default and stacked items are full-width by default. Use the ",(0,a.jsx)(t.code,{children:"gap"}),"\nprop to add space between items."]}),"\n",(0,a.jsx)(n,{language:"jsx",live:!0,previewClassName:"stack-example",children:d}),"\n",(0,a.jsx)(t.h2,{id:"horizontal",children:"Horizontal"}),"\n",(0,a.jsxs)(t.p,{children:["Use ",(0,a.jsx)(t.code,{children:'direction="horizontal"'})," for horizontal layouts. Stacked items are vertically centered\nby default and only take up their necessary width. Use the ",(0,a.jsx)(t.code,{children:"gap"})," prop to add space between\nitems."]}),"\n",(0,a.jsx)(n,{language:"jsx",live:!0,previewClassName:"stack-example",children:s}),"\n",(0,a.jsxs)(t.p,{children:["Using horizontal margin utilities like ",(0,a.jsx)(t.code,{children:".ms-auto"})," as spacers:"]}),"\n",(0,a.jsx)(n,{language:"jsx",live:!0,previewClassName:"stack-example",children:l}),"\n",(0,a.jsx)(t.p,{children:"And with vertical rules:"}),"\n",(0,a.jsx)(n,{language:"jsx",live:!0,previewClassName:"stack-example",children:c}),"\n",(0,a.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,a.jsxs)(t.p,{children:["Use a vertical ",(0,a.jsx)(t.code,{children:"Stack"})," to stack buttons and other elements:"]}),"\n",(0,a.jsx)(n,{language:"jsx",live:!0,children:r}),"\n",(0,a.jsxs)(t.p,{children:["Create an inline form with a horizontal ",(0,a.jsx)(t.code,{children:"Stack"}),":"]}),"\n",(0,a.jsx)(n,{language:"jsx",live:!0,children:i}),"\n",(0,a.jsx)(t.h2,{id:"api",children:"API"}),"\n",(0,a.jsx)(t.h3,{id:"stack",children:"Stack"}),"\n",(0,a.jsx)(p,{name:"Stack"})]})}function k(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(x,{...e})}):x(e)}function f(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},11151:(e,t,n)=>{n.d(t,{Z:()=>s,a:()=>i});var a=n(67294);const o={},r=a.createContext(o);function i(e){const t=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),a.createElement(r.Provider,{value:t},e.children)}}}]);