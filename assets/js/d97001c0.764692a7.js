"use strict";(self.webpackChunkreact_bootstrap_website=self.webpackChunkreact_bootstrap_website||[]).push([[6304],{93830:(t,n,o)=>{o.r(n),o.d(n,{assets:()=>m,contentTitle:()=>c,default:()=>h,frontMatter:()=>d,metadata:()=>B,toc:()=>b});var r=o(85893),e=o(11151);const u='import Button from \'react-bootstrap/Button\';\nimport ButtonGroup from \'react-bootstrap/ButtonGroup\';\n\nfunction BasicExample() {\n  return (\n    <ButtonGroup aria-label="Basic example">\n      <Button variant="secondary">Left</Button>\n      <Button variant="secondary">Middle</Button>\n      <Button variant="secondary">Right</Button>\n    </ButtonGroup>\n  );\n}\n\nexport default BasicExample;\n',a='import Button from \'react-bootstrap/Button\';\nimport DropdownButton from \'react-bootstrap/DropdownButton\';\nimport Dropdown from \'react-bootstrap/Dropdown\';\n\nfunction NestedExample() {\n  return (\n    <ButtonGroup>\n      <Button>1</Button>\n      <Button>2</Button>\n\n      <DropdownButton as={ButtonGroup} title="Dropdown" id="bg-nested-dropdown">\n        <Dropdown.Item eventKey="1">Dropdown link</Dropdown.Item>\n        <Dropdown.Item eventKey="2">Dropdown link</Dropdown.Item>\n      </DropdownButton>\n    </ButtonGroup>\n  );\n}\n\nexport default NestedExample;\n',p='import Button from \'react-bootstrap/Button\';\nimport ButtonGroup from \'react-bootstrap/ButtonGroup\';\n\nfunction SizesExample() {\n  return (\n    <>\n      <ButtonGroup size="lg" className="mb-2">\n        <Button>Left</Button>\n        <Button>Middle</Button>\n        <Button>Right</Button>\n      </ButtonGroup>\n      <br />\n      <ButtonGroup className="mb-2">\n        <Button>Left</Button>\n        <Button>Middle</Button>\n        <Button>Right</Button>\n      </ButtonGroup>\n      <br />\n      <ButtonGroup size="sm">\n        <Button>Left</Button>\n        <Button>Middle</Button>\n        <Button>Right</Button>\n      </ButtonGroup>\n    </>\n  );\n}\n\nexport default SizesExample;\n',i='import Button from \'react-bootstrap/Button\';\nimport ButtonGroup from \'react-bootstrap/ButtonGroup\';\nimport ButtonToolbar from \'react-bootstrap/ButtonToolbar\';\nimport Form from \'react-bootstrap/Form\';\nimport InputGroup from \'react-bootstrap/InputGroup\';\n\nfunction ToolbarExample() {\n  return (\n    <>\n      <ButtonToolbar className="mb-3" aria-label="Toolbar with Button groups">\n        <ButtonGroup className="me-2" aria-label="First group">\n          <Button variant="secondary">1</Button>\n          <Button variant="secondary">2</Button>\n          <Button variant="secondary">3</Button>\n          <Button variant="secondary">4</Button>\n        </ButtonGroup>\n        <InputGroup>\n          <InputGroup.Text id="btnGroupAddon">@</InputGroup.Text>\n          <Form.Control\n            type="text"\n            placeholder="Input group example"\n            aria-label="Input group example"\n            aria-describedby="btnGroupAddon"\n          />\n        </InputGroup>\n      </ButtonToolbar>\n\n      <ButtonToolbar\n        className="justify-content-between"\n        aria-label="Toolbar with Button groups"\n      >\n        <ButtonGroup aria-label="First group">\n          <Button variant="secondary">1</Button>\n          <Button variant="secondary">2</Button>\n          <Button variant="secondary">3</Button>\n          <Button variant="secondary">4</Button>\n        </ButtonGroup>\n        <InputGroup>\n          <InputGroup.Text id="btnGroupAddon2">@</InputGroup.Text>\n          <Form.Control\n            type="text"\n            placeholder="Input group example"\n            aria-label="Input group example"\n            aria-describedby="btnGroupAddon2"\n          />\n        </InputGroup>\n      </ButtonToolbar>\n    </>\n  );\n}\n\nexport default ToolbarExample;\n',l='import Button from \'react-bootstrap/Button\';\nimport ButtonGroup from \'react-bootstrap/ButtonGroup\';\nimport ButtonToolbar from \'react-bootstrap/ButtonToolbar\';\n\nfunction ToolbarBasicExample() {\n  return (\n    <ButtonToolbar aria-label="Toolbar with button groups">\n      <ButtonGroup className="me-2" aria-label="First group">\n        <Button>1</Button>\n        <Button>2</Button>\n        <Button>3</Button>\n        <Button>4</Button>\n      </ButtonGroup>\n      <ButtonGroup className="me-2" aria-label="Second group">\n        <Button>5</Button>\n        <Button>6</Button>\n        <Button>7</Button>\n      </ButtonGroup>\n      <ButtonGroup aria-label="Third group">\n        <Button>8</Button>\n      </ButtonGroup>\n    </ButtonToolbar>\n  );\n}\n\nexport default ToolbarBasicExample;\n',s='import Button from \'react-bootstrap/Button\';\nimport ButtonGroup from \'react-bootstrap/ButtonGroup\';\nimport Dropdown from \'react-bootstrap/Dropdown\';\nimport DropdownButton from \'react-bootstrap/DropdownButton\';\n\nfunction VerticalExample() {\n  return (\n    <ButtonGroup vertical>\n      <Button>Button</Button>\n      <Button>Button</Button>\n\n      <DropdownButton\n        as={ButtonGroup}\n        title="Dropdown"\n        id="bg-vertical-dropdown-1"\n      >\n        <Dropdown.Item eventKey="1">Dropdown link</Dropdown.Item>\n        <Dropdown.Item eventKey="2">Dropdown link</Dropdown.Item>\n      </DropdownButton>\n\n      <Button>Button</Button>\n      <Button>Button</Button>\n\n      <DropdownButton\n        as={ButtonGroup}\n        title="Dropdown"\n        id="bg-vertical-dropdown-2"\n      >\n        <Dropdown.Item eventKey="1">Dropdown link</Dropdown.Item>\n        <Dropdown.Item eventKey="2">Dropdown link</Dropdown.Item>\n      </DropdownButton>\n\n      <DropdownButton\n        as={ButtonGroup}\n        title="Dropdown"\n        id="bg-vertical-dropdown-3"\n      >\n        <Dropdown.Item eventKey="1">Dropdown link</Dropdown.Item>\n        <Dropdown.Item eventKey="2">Dropdown link</Dropdown.Item>\n      </DropdownButton>\n    </ButtonGroup>\n  );\n}\n\nexport default VerticalExample;\n',d={title:"Button group",description:"Group a series of buttons together on a single line or stack them in a vertical column."},c=void 0,B={id:"components/button-group",title:"Button group",description:"Group a series of buttons together on a single line or stack them in a vertical column.",source:"@site/docs/components/button-group.mdx",sourceDirName:"components",slug:"/components/button-group",permalink:"/docs/components/button-group",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Button group",description:"Group a series of buttons together on a single line or stack them in a vertical column."},sidebar:"sidebar",previous:{title:"Breadcrumbs",permalink:"/docs/components/breadcrumb"},next:{title:"Buttons",permalink:"/docs/components/buttons"}},m={},b=[{value:"Basic example",id:"basic-example",level:2},{value:"Button toolbar",id:"button-toolbar",level:2},{value:"Sizing",id:"sizing",level:2},{value:"Nesting",id:"nesting",level:2},{value:"Vertical variation",id:"vertical-variation",level:2},{value:"API",id:"api",level:2},{value:"ButtonGroup",id:"buttongroup",level:3},{value:"ButtonToolbar",id:"buttontoolbar",level:3}];function x(t){const n={code:"code",h2:"h2",h3:"h3",p:"p",strong:"strong",...(0,e.a)(),...t.components},{CodeBlock:o,PropsTable:d}=n;return o||g("CodeBlock",!0),d||g("PropsTable",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"basic-example",children:"Basic example"}),"\n",(0,r.jsxs)(n.p,{children:["Wrap a series of ",(0,r.jsx)(n.code,{children:"<Button>"}),"s in a ",(0,r.jsx)(n.code,{children:"<ButtonGroup>"}),"."]}),"\n",(0,r.jsx)(o,{language:"jsx",live:!0,children:u}),"\n",(0,r.jsx)(n.h2,{id:"button-toolbar",children:"Button toolbar"}),"\n",(0,r.jsxs)(n.p,{children:["Combine sets of ",(0,r.jsx)(n.code,{children:"<ButtonGroup>"}),"s into a ",(0,r.jsx)(n.code,{children:"<ButtonToolbar>"})," for more complex components."]}),"\n",(0,r.jsx)(o,{language:"jsx",live:!0,children:l}),"\n",(0,r.jsx)(n.p,{children:"Feel free to mix input groups with button groups in your toolbars.\nSimilar to the example above, you\u2019ll likely need some utilities though\nto space things properly."}),"\n",(0,r.jsx)(o,{language:"jsx",live:!0,children:i}),"\n",(0,r.jsx)(n.h2,{id:"sizing",children:"Sizing"}),"\n",(0,r.jsxs)(n.p,{children:["Instead of applying button sizing props to every button in a group, just\nadd ",(0,r.jsx)(n.code,{children:"size"})," prop to the ",(0,r.jsx)(n.code,{children:"<ButtonGroup>"}),"."]}),"\n",(0,r.jsx)(o,{language:"jsx",live:!0,children:p}),"\n",(0,r.jsx)(n.h2,{id:"nesting",children:"Nesting"}),"\n",(0,r.jsxs)(n.p,{children:["You can place other button types within the\n",(0,r.jsx)(n.code,{children:"<ButtonGroup>"})," like ",(0,r.jsx)(n.code,{children:"<DropdownButton>"}),"s."]}),"\n",(0,r.jsx)(o,{language:"jsx",live:!0,children:a}),"\n",(0,r.jsx)(n.h2,{id:"vertical-variation",children:"Vertical variation"}),"\n",(0,r.jsxs)(n.p,{children:["Make a set of buttons appear vertically stacked rather than\nhorizontally, by adding ",(0,r.jsx)(n.code,{children:"vertical"})," to the ",(0,r.jsx)(n.code,{children:"<ButtonGroup>"}),".\n",(0,r.jsx)(n.strong,{children:"Split button dropdowns are not supported here."})]}),"\n",(0,r.jsx)(o,{language:"jsx",live:!0,children:s}),"\n",(0,r.jsx)(n.h2,{id:"api",children:"API"}),"\n",(0,r.jsx)(n.h3,{id:"buttongroup",children:"ButtonGroup"}),"\n",(0,r.jsx)(d,{name:"ButtonGroup"}),"\n",(0,r.jsx)(n.h3,{id:"buttontoolbar",children:"ButtonToolbar"}),"\n",(0,r.jsx)(d,{name:"ButtonToolbar"})]})}function h(t={}){const{wrapper:n}={...(0,e.a)(),...t.components};return n?(0,r.jsx)(n,{...t,children:(0,r.jsx)(x,{...t})}):x(t)}function g(t,n){throw new Error("Expected "+(n?"component":"object")+" `"+t+"` to be defined: you likely forgot to import, pass, or provide it.")}},11151:(t,n,o)=>{o.d(n,{Z:()=>p,a:()=>a});var r=o(67294);const e={},u=r.createContext(e);function a(t){const n=r.useContext(u);return r.useMemo((function(){return"function"==typeof t?t(n):{...n,...t}}),[n,t])}function p(t){let n;return n=t.disableParentContext?"function"==typeof t.components?t.components(e):t.components||e:a(t.components),r.createElement(u.Provider,{value:n},t.children)}}}]);