"use strict";(self.webpackChunkreact_bootstrap_website=self.webpackChunkreact_bootstrap_website||[]).push([[3780],{59512:(n,e,a)=>{a.r(e),a.d(e,{assets:()=>h,contentTitle:()=>d,default:()=>u,frontMatter:()=>f,metadata:()=>p,toc:()=>v});var o=a(85893),s=a(11151);const t="import { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Offcanvas from 'react-bootstrap/Offcanvas';\n\nfunction Example() {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={handleShow}>\n        Launch\n      </Button>\n\n      <Offcanvas show={show} onHide={handleClose}>\n        <Offcanvas.Header closeButton>\n          <Offcanvas.Title>Offcanvas</Offcanvas.Title>\n        </Offcanvas.Header>\n        <Offcanvas.Body>\n          Some text as placeholder. In real life you can have the elements you\n          have chosen. Like, text, images, lists, etc.\n        </Offcanvas.Body>\n      </Offcanvas>\n    </>\n  );\n}\n\nexport default Example;\n",c="import { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Offcanvas from 'react-bootstrap/Offcanvas';\n\nconst options = [\n  {\n    name: 'Enable backdrop (default)',\n    scroll: false,\n    backdrop: true,\n  },\n  {\n    name: 'Disable backdrop',\n    scroll: false,\n    backdrop: false,\n  },\n  {\n    name: 'Enable body scrolling',\n    scroll: true,\n    backdrop: false,\n  },\n  {\n    name: 'Enable both scrolling & backdrop',\n    scroll: true,\n    backdrop: true,\n  },\n];\n\nfunction OffCanvasExample({ name, ...props }) {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const toggleShow = () => setShow((s) => !s);\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={toggleShow} className=\"me-2\">\n        {name}\n      </Button>\n      <Offcanvas show={show} onHide={handleClose} {...props}>\n        <Offcanvas.Header closeButton>\n          <Offcanvas.Title>Offcanvas</Offcanvas.Title>\n        </Offcanvas.Header>\n        <Offcanvas.Body>\n          Some text as placeholder. In real life you can have the elements you\n          have chosen. Like, text, images, lists, etc.\n        </Offcanvas.Body>\n      </Offcanvas>\n    </>\n  );\n}\n\nfunction Example() {\n  return (\n    <>\n      {options.map((props, idx) => (\n        <OffCanvasExample key={idx} {...props} />\n      ))}\n    </>\n  );\n}\n\nrender(<Example />);\n",l="import { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Offcanvas from 'react-bootstrap/Offcanvas';\n\nfunction Example() {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={handleShow}>\n        Toggle static offcanvas\n      </Button>\n\n      <Offcanvas show={show} onHide={handleClose} backdrop=\"static\">\n        <Offcanvas.Header closeButton>\n          <Offcanvas.Title>Offcanvas</Offcanvas.Title>\n        </Offcanvas.Header>\n        <Offcanvas.Body>\n          I will not close if you click outside of me.\n        </Offcanvas.Body>\n      </Offcanvas>\n    </>\n  );\n}\n\nexport default Example;\n",r='import { useState } from \'react\';\nimport Alert from \'react-bootstrap/Alert\';\nimport Button from \'react-bootstrap/Button\';\nimport Offcanvas from \'react-bootstrap/Offcanvas\';\n\nfunction ResponsiveExample() {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Button variant="primary" className="d-lg-none" onClick={handleShow}>\n        Launch\n      </Button>\n\n      <Alert variant="info" className="d-none d-lg-block">\n        Resize your browser to show the responsive offcanvas toggle.\n      </Alert>\n\n      <Offcanvas show={show} onHide={handleClose} responsive="lg">\n        <Offcanvas.Header closeButton>\n          <Offcanvas.Title>Responsive offcanvas</Offcanvas.Title>\n        </Offcanvas.Header>\n        <Offcanvas.Body>\n          <p className="mb-0">\n            This is content within an <code>.offcanvas-lg</code>.\n          </p>\n        </Offcanvas.Body>\n      </Offcanvas>\n    </>\n  );\n}\n\nexport default ResponsiveExample;\n',i="import { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Offcanvas from 'react-bootstrap/Offcanvas';\n\nfunction OffCanvasExample({ name, ...props }) {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={handleShow} className=\"me-2\">\n        {name}\n      </Button>\n      <Offcanvas show={show} onHide={handleClose} {...props}>\n        <Offcanvas.Header closeButton>\n          <Offcanvas.Title>Offcanvas</Offcanvas.Title>\n        </Offcanvas.Header>\n        <Offcanvas.Body>\n          Some text as placeholder. In real life you can have the elements you\n          have chosen. Like, text, images, lists, etc.\n        </Offcanvas.Body>\n      </Offcanvas>\n    </>\n  );\n}\n\nfunction Example() {\n  return (\n    <>\n      {['start', 'end', 'top', 'bottom'].map((placement, idx) => (\n        <OffCanvasExample key={idx} placement={placement} name={placement} />\n      ))}\n    </>\n  );\n}\n\nrender(<Example />);\n",f={title:"Offcanvas",description:"Build hidden sidebars into your project for navigation, shopping carts, and more."},d=void 0,p={id:"components/offcanvas",title:"Offcanvas",description:"Build hidden sidebars into your project for navigation, shopping carts, and more.",source:"@site/docs/components/offcanvas.mdx",sourceDirName:"components",slug:"/components/offcanvas",permalink:"/docs/components/offcanvas",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Offcanvas",description:"Build hidden sidebars into your project for navigation, shopping carts, and more."},sidebar:"sidebar",previous:{title:"Navs and tabs",permalink:"/docs/components/navs"},next:{title:"Overlay",permalink:"/docs/components/overlays"}},h={},v=[{value:"Examples",id:"examples",level:2},{value:"Basic Example",id:"basic-example",level:3},{value:"Responsive",id:"responsive",level:3},{value:"Placement",id:"placement",level:3},{value:"Backdrop",id:"backdrop",level:3},{value:"Static backdrop",id:"static-backdrop",level:3},{value:"API",id:"api",level:2},{value:"Offcanvas",id:"offcanvas",level:3},{value:"OffcanvasHeader",id:"offcanvasheader",level:3},{value:"OffcanvasTitle",id:"offcanvastitle",level:3},{value:"OffcanvasBody",id:"offcanvasbody",level:3}];function m(n){const e={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,s.a)(),...n.components},{CodeBlock:a,PropsTable:f}=e;return a||x("CodeBlock",!0),f||x("PropsTable",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h2,{id:"examples",children:"Examples"}),"\n",(0,o.jsx)(e.p,{children:"Offcanvas includes support for a header with a close button and an optional body class\nfor some initial padding. We suggest that you include offcanvas headers with dismiss\nactions whenever possible, or provide an explicit dismiss action."}),"\n",(0,o.jsx)(e.h3,{id:"basic-example",children:"Basic Example"}),"\n",(0,o.jsx)(a,{language:"jsx",live:!0,children:t}),"\n",(0,o.jsx)(e.h3,{id:"responsive",children:"Responsive"}),"\n",(0,o.jsx)(e.p,{children:"Responsive offcanvas classes hide content outside the viewport from a specified breakpoint\nand down. Above that breakpoint, the contents within will behave as usual."}),"\n",(0,o.jsx)(a,{language:"jsx",live:!0,children:r}),"\n",(0,o.jsx)(e.h3,{id:"placement",children:"Placement"}),"\n",(0,o.jsx)(e.p,{children:"Offcanvas supports a few different placements:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"start"})," places offcanvas on the left of the viewport"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"end"})," places offcanvas on the right of the viewport"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"top"})," places offcanvas on the top of the viewport"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"bottom"})," places offcanvas on the bottom of the viewport"]}),"\n"]}),"\n",(0,o.jsx)(a,{language:"jsx",live:!0,noInline:!0,children:i}),"\n",(0,o.jsx)(e.h3,{id:"backdrop",children:"Backdrop"}),"\n",(0,o.jsxs)(e.p,{children:["Scrolling the ",(0,o.jsx)(e.code,{children:"<body>"})," element is disabled when an offcanvas and its backdrop are\nvisible. Use the ",(0,o.jsx)(e.code,{children:"scroll"})," prop to toggle ",(0,o.jsx)(e.code,{children:"<body>"})," scrolling and the ",(0,o.jsx)(e.code,{children:"backdrop"})," prop\nto toggle the backdrop."]}),"\n",(0,o.jsx)(a,{language:"jsx",live:!0,noInline:!0,children:c}),"\n",(0,o.jsx)(e.h3,{id:"static-backdrop",children:"Static backdrop"}),"\n",(0,o.jsxs)(e.p,{children:["When ",(0,o.jsx)(e.code,{children:"backdrop"})," is set to ",(0,o.jsx)(e.code,{children:"static"}),", the offcanvas will not close when clicking outside of it."]}),"\n",(0,o.jsx)(a,{language:"jsx",live:!0,children:l}),"\n",(0,o.jsx)(e.h2,{id:"api",children:"API"}),"\n",(0,o.jsx)(e.h3,{id:"offcanvas",children:"Offcanvas"}),"\n",(0,o.jsx)(f,{name:"Offcanvas"}),"\n",(0,o.jsx)(e.h3,{id:"offcanvasheader",children:"OffcanvasHeader"}),"\n",(0,o.jsx)(f,{name:"OffcanvasHeader"}),"\n",(0,o.jsx)(e.h3,{id:"offcanvastitle",children:"OffcanvasTitle"}),"\n",(0,o.jsx)(f,{name:"OffcanvasTitle"}),"\n",(0,o.jsx)(e.h3,{id:"offcanvasbody",children:"OffcanvasBody"}),"\n",(0,o.jsx)(f,{name:"OffcanvasBody"})]})}function u(n={}){const{wrapper:e}={...(0,s.a)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(m,{...n})}):m(n)}function x(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}},11151:(n,e,a)=>{a.d(e,{Z:()=>l,a:()=>c});var o=a(67294);const s={},t=o.createContext(s);function c(n){const e=o.useContext(t);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:c(n.components),o.createElement(t.Provider,{value:e},n.children)}}}]);