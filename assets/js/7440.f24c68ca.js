"use strict";(self.webpackChunkreact_bootstrap_website=self.webpackChunkreact_bootstrap_website||[]).push([[7440],{77440:e=>{e.exports=JSON.parse('{"description":"","props":{"as":{"required":false,"tsType":{"name":"union","raw":"React.ElementType | undefined","elements":[{"name":"ReactElementType","raw":"React.ElementType"},{"name":"undefined"}]},"description":"Element used to render the component.","defaultValue":{"value":"\'input\'","computed":false},"doclets":{}},"bsPrefix":{"required":false,"tsType":{"name":"union","raw":"string | undefined","elements":[{"name":"string"},{"name":"undefined"}]},"description":"","doclets":{"default":"\'form-check\'"}},"bsSwitchPrefix":{"required":false,"tsType":{"name":"union","raw":"string | undefined","elements":[{"name":"string"},{"name":"undefined"}]},"description":"bsPrefix override for the base switch class.","doclets":{"default":"\'form-switch\'"}},"id":{"required":false,"tsType":{"name":"union","raw":"string | undefined","elements":[{"name":"string"},{"name":"undefined"}]},"description":"A HTML id attribute, necessary for proper form accessibility.\\nAn id is recommended for allowing label clicks to toggle the check control.\\n\\nThis is **required** when `type=\\"switch\\"` due to how they are rendered.","doclets":{}},"children":{"required":false,"tsType":{"name":"union","raw":"React.ReactNode | undefined","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"undefined"}]},"description":"Provide a function child to manually handle the layout of the FormCheck\'s inner components.\\n\\n```jsx\\n<FormCheck>\\n  <FormCheck.Input isInvalid type={radio} />\\n  <FormCheck.Label>Allow us to contact you?</FormCheck.Label>\\n  <Feedback type=\\"invalid\\">Yo this is required</Feedback>\\n</FormCheck>\\n```","doclets":{}},"inline":{"required":false,"tsType":{"name":"union","raw":"boolean | undefined","elements":[{"name":"boolean"},{"name":"undefined"}]},"description":"Groups controls horizontally with other `FormCheck`s.","defaultValue":{"value":"false","computed":false},"doclets":{}},"reverse":{"required":false,"tsType":{"name":"union","raw":"boolean | undefined","elements":[{"name":"boolean"},{"name":"undefined"}]},"description":"Put your checkboxes, radios, and switches on the opposite side.","defaultValue":{"value":"false","computed":false},"doclets":{}},"disabled":{"required":false,"tsType":{"name":"union","raw":"boolean | undefined","elements":[{"name":"boolean"},{"name":"undefined"}]},"description":"Disables the control.","defaultValue":{"value":"false","computed":false},"doclets":{}},"title":{"required":false,"tsType":{"name":"union","raw":"string | undefined","elements":[{"name":"string"},{"name":"undefined"}]},"description":"`title` attribute for the underlying `FormCheckLabel`.","defaultValue":{"value":"\'\'","computed":false},"doclets":{}},"label":{"required":false,"tsType":{"name":"union","raw":"React.ReactNode | undefined","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"undefined"}]},"description":"Label for the control.","doclets":{}},"type":{"required":false,"tsType":{"name":"union","raw":"FormCheckType | undefined","elements":[{"name":"union","raw":"\'checkbox\' | \'radio\' | \'switch\'","elements":[{"name":"literal","value":"\'checkbox\'"},{"name":"literal","value":"\'radio\'"},{"name":"literal","value":"\'switch\'"}]},{"name":"undefined"}]},"description":"The type of checkable.","defaultValue":{"value":"\'checkbox\'","computed":false},"doclets":{}},"isValid":{"required":false,"tsType":{"name":"union","raw":"boolean | undefined","elements":[{"name":"boolean"},{"name":"undefined"}]},"description":"Manually style the input as valid","defaultValue":{"value":"false","computed":false},"doclets":{}},"isInvalid":{"required":false,"tsType":{"name":"boolean"},"description":"Manually style the input as invalid","defaultValue":{"value":"false","computed":false},"doclets":{}},"feedbackTooltip":{"required":false,"tsType":{"name":"union","raw":"boolean | undefined","elements":[{"name":"boolean"},{"name":"undefined"}]},"description":"Display feedback as a tooltip.","defaultValue":{"value":"false","computed":false},"doclets":{}},"feedback":{"required":false,"tsType":{"name":"union","raw":"React.ReactNode | undefined","elements":[{"name":"ReactReactNode","raw":"React.ReactNode"},{"name":"undefined"}]},"description":"A message to display when the input is in a validation state","doclets":{}},"feedbackType":{"required":false,"tsType":{"name":"union","raw":"FeedbackType | undefined","elements":[{"name":"FeedbackType"},{"name":"undefined"}]},"description":"Specify whether the feedback is for valid or invalid fields","doclets":{}}}}')}}]);